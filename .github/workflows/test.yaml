name: Test

on: push

jobs:
  build-and-test:
    name: Build and Test on Node

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start testing database
        run: docker-compose up -d

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Build
      - name: Build the application
        run: yarn build

      # Type Checking
      - name: Check TypeScript types
        run: yarn typecheck

      # E2E Test
      - name: Populate the database
        run: yarn prisma:migrate

      - name: Run browser-based end-to-tests (Cypress)
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          wait-on: 'http://localhost:3000'
          env: DATABASE_URL=${{Â env.DATABASE_URL }}

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  build-heroku:
    name: Build for Heroku

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check compatibility with Heroku
        run: >
          docker run 
          --volume $(pwd):/tmp/app
          gliderlabs/herokuish
          /bin/herokuish test
