name: CI

on: push

jobs:
  build-and-test:
    name: Build and Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 15.x]

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Start testing database
        run: docker-compose up -d

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Build
      - name: Build the application
        run: yarn build

      # Type Checking
      - name: Check TypeScript types
        run: yarn typecheck

      # E2E Test
      - name: Populate the database
        run: yarn prisma:migrate

      - name: Run browser-based end-to-tests (Cypress)
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          wait-on: 'http://localhost:3000'
          env: DATABASE_URL=${{Â env.DATABASE_URL }}

      - uses: actions/upload-artifact@v2.2.4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

  build-heroku:
    name: Build for Heroku
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Check compatibility with Heroku
        run: >
          docker run 
          --volume $(pwd):/tmp/app
          gliderlabs/herokuish
          /bin/herokuish test

  release:
    name: Release
    runs-on: ubuntu-20.04

    # Only run on main
    if: github.ref == 'refs/heads/main'

    needs:
      - build-and-test
      - build-heroku

    outputs:
      gitref: ${{ steps.storeGitRef.outputs.gitref}}

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Setup Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 14

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn semantic-release

      - name: Store Git HEAD reference
        id: storeGitRef
        run: echo "::set-output name=gitref::$(git rev-parse HEAD)"

  deploy-to-heroku:
    name: Deploy to Heroku
    runs-on: ubuntu-20.04

    # Only run on main
    if: github.ref == 'refs/heads/main'

    needs:
      - release

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
        with:
          # Also checkout the version increment commit, if created during release.
          ref: ${{ needs.release.outputs.gitref }}

      - name: Deploy to Heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
